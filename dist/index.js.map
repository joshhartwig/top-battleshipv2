{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb,eAAe,mBAAO,CAAC,6BAAQ;AAC/B,kBAAkB,mBAAO,CAAC,mCAAW;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;;;;;;;;;;AC3CA;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ,iBAAiB,mBAAO,CAAC,iCAAU;AACnC,aAAa,mBAAO,CAAC,yBAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,YAAY;;;;;;;;;;;AC1CC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc;AACd,gBAAgB,mBAAO,CAAC,+BAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;;;;;;;;;;AChBD;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;;;;;;;;;;ACZC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,UAAU;AACV;AACA;AACA,uDAAuD,QAAQ;AAC/D,2DAA2D,YAAY;AACvE,wDAAwD,SAAS;AACjE,0DAA0D,WAAW;AACrE,yDAAyD,iBAAiB;AAC1E,sDAAsD,cAAc;AACpE,kDAAkD,UAAU;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA,uCAAuC,MAAM,GAAG,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA,UAAU;;;;;;;;;;;ACjDG;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,GAAG,mBAAmB;AACrC;AACA;AACA;AACA;AACA,CAAC,wCAAwC,mBAAmB,KAAK;AACjE;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;UC5Cf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe,mBAAO,CAAC,6BAAQ;AAC/B","sources":["webpack://top-battleshipv2/./src/board.ts","webpack://top-battleshipv2/./src/game.ts","webpack://top-battleshipv2/./src/player.ts","webpack://top-battleshipv2/./src/ship.ts","webpack://top-battleshipv2/./src/ui.ts","webpack://top-battleshipv2/./src/utility.ts","webpack://top-battleshipv2/webpack/bootstrap","webpack://top-battleshipv2/./src/index.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.board = void 0;\nconst ship_1 = require(\"./ship\");\nconst utility_1 = require(\"./utility\");\nclass board {\n    constructor(rows, cols) {\n        this.rows = rows;\n        this.cols = cols;\n        this.grid = this.createGrid(this.rows, this.cols);\n        this.ships = [];\n    }\n    createGrid(rows, cols) {\n        let counter = 0;\n        let temp = [];\n        for (let c = 0; c < this.rows * this.cols; c++) {\n            temp.push({\n                ship: false,\n                hit: false,\n                miss: false,\n                id: c,\n            });\n        }\n        return temp;\n    }\n    recieveAttack(id) {\n        if (this.grid[id].ship === true) {\n            this.grid[id].hit = true;\n            return true;\n        }\n        this.grid[id].miss = true;\n        return false;\n    }\n    placeShip(id, length, orientation) {\n        if (utility_1.utility.validateGridLocation(id, length, orientation, this.rows * this.cols)) {\n            let locations = utility_1.utility.range(id, length, orientation);\n            this.ships.push(new ship_1.ship(locations));\n            locations.forEach((e) => {\n                this.grid[e].ship = true;\n            });\n        }\n    }\n}\nexports.board = board;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.game = void 0;\nconst player_1 = require(\"./player\");\nconst ui_1 = require(\"./ui\");\nclass game {\n    constructor(shipLimit = 5) {\n        this.selectedShipSize = 1;\n        this.shipButtons = [];\n        this.shipLimit = shipLimit;\n        this.player = new player_1.player();\n        this.ai = new player_1.player();\n        this.ui = new ui_1.ui('introId', 'placementId', 'battleId', 'gameoverId', 'placementBoardId', 'playerBoardId', 'aiBoardId');\n        this.startButton = document.getElementById('startBtnId');\n        this.playButton = document.getElementById('playBtnId');\n        this.nameInput = document.getElementById('nameInputId');\n        this.shipPlacementButton5 = document.getElementById('shipPlacement5Id');\n        this.shipPlacementButton4 = document.getElementById('shipPlacement4Id');\n        this.shipPlacementButton3 = document.getElementById('shipPlacement3Id');\n        this.shipPlacementButton2 = document.getElementById('shipPlacement2Id');\n        this.shipButtons.push(this.shipPlacementButton2);\n        this.shipButtons.push(this.shipPlacementButton3);\n        this.shipButtons.push(this.shipPlacementButton4);\n        this.shipButtons.push(this.shipPlacementButton5);\n        this.ui.createBoard('placementBoardId', 'player', this.player.board.grid);\n        this.start();\n    }\n    start() {\n        this.ui.showIntro();\n        this.startButton.addEventListener('click', () => {\n            this.player.name = this.nameInput.value.toString();\n            this.ui.showShipPlacement();\n        });\n        let counterStart = 2;\n        for (let s = 0; s < this.shipButtons.length; s++) {\n            this.shipButtons[s].addEventListener('click', e => {\n                this.selectedShipSize = counterStart;\n                counterStart++;\n            });\n        }\n    }\n}\nexports.game = game;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.player = void 0;\nconst board_1 = require(\"./board\");\nclass player {\n    constructor() {\n        this.name = '';\n        this.hits = 0;\n        this.misses = 0;\n        this.ships = [];\n        this.board = new board_1.board(10, 10);\n    }\n    allShipsSunk() {\n        return false;\n    }\n}\nexports.player = player;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ship = void 0;\nclass ship {\n    constructor(locations) {\n        this.locations = locations;\n        this.hits = [];\n    }\n    isSunk() {\n        return false;\n    }\n}\nexports.ship = ship;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ui = void 0;\nclass ui {\n    constructor(introId, placementId, battleId, gameOverId, placementBoardId, playerBoardId, aiBoardId) {\n        this.introSection = document.getElementById(`${introId}`);\n        this.placementSection = document.getElementById(`${placementId}`);\n        this.battleSection = document.getElementById(`${battleId}`);\n        this.gameOverSection = document.getElementById(`${gameOverId}`);\n        this.placementBoard = document.getElementById(`${placementBoardId}`);\n        this.playerBoard = document.getElementById(`${playerBoardId}`);\n        this.aiBoard = document.getElementById(`${aiBoardId}`);\n    }\n    showIntro() {\n        this.introSection.style.display = 'block';\n        this.placementSection.style.display = 'none';\n        this.battleSection.style.display = 'none';\n        this.gameOverSection.style.display = 'none';\n    }\n    showShipPlacement() {\n        this.introSection.style.display = 'none';\n        this.placementSection.style.display = 'block';\n        this.battleSection.style.display = 'none';\n        this.gameOverSection.style.display = 'none';\n    }\n    showMain() {\n        this.introSection.style.display = 'none';\n        this.placementSection.style.display = 'none';\n        this.battleSection.style.display = 'block';\n        this.gameOverSection.style.display = 'none';\n    }\n    showAll() {\n        this.introSection.style.display = 'block';\n        this.placementSection.style.display = 'block';\n        this.battleSection.style.display = 'block';\n        this.gameOverSection.style.display = 'block';\n    }\n    createBoard(container, owner, grid) {\n        let counter = 0;\n        let board = document.getElementById(container);\n        for (let c = 0; c < grid.length; c++) {\n            const cell = document.createElement('div');\n            cell.classList.add(`cell`);\n            cell.setAttribute('id', `${owner}:${counter}`);\n            counter += 1;\n            board === null || board === void 0 ? void 0 : board.appendChild(cell);\n        }\n    }\n}\nexports.ui = ui;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utility = exports.orientation = void 0;\nvar orientation;\n(function (orientation) {\n    orientation[orientation[\"horizontal\"] = 0] = \"horizontal\";\n    orientation[orientation[\"vertical\"] = 1] = \"vertical\";\n})(orientation = exports.orientation || (exports.orientation = {}));\nclass utility {\n    static range(location, length, orientation) {\n        let temp = [];\n        if (orientation === 0) {\n            for (let r = location; r <= location + length - 1; r++) {\n                temp.push(r);\n            }\n        }\n        if (orientation === 1) {\n            for (let r = location; r < length * 10; r += 10) {\n                temp.push(r);\n            }\n        }\n        return temp;\n    }\n    static validateGridLocation(location, length, orientation, gridSize) {\n        if (orientation === 0) {\n            location = location % 10;\n            if (location + length > 10)\n                return false;\n            return true;\n        }\n        if (orientation === 1) {\n            let maxLength = length * 10;\n            if (location + maxLength > gridSize)\n                return false;\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    static random(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\nexports.utility = utility;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst game_1 = require(\"./game\");\nconst battleship = new game_1.game(5);\n"],"names":[],"sourceRoot":""}